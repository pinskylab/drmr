{
  "hash": "9cc1917240065c5b13166015a1fea4be",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Get Started\"\nauthor: Lucas da Cunha Godoy\nvignette: >\n  %\\VignetteIndexEntry{get-started}\n  %\\VignetteEngine{quarto::html}\n  %\\VignetteEncoding{UTF-8}\nknitr:\n  opts_chunk:\n    collapse: true\n    comment: '#>'\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(drmr)\nlibrary(sf) ## \"mapping\"\n#> Linking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\nlibrary(ggplot2) ## graphs\nlibrary(bayesplot) ## and more graphs\n#> This is bayesplot version 1.11.1\n#> - Online documentation and vignettes at mc-stan.org/bayesplot\n#> - bayesplot theme set to bayesplot::theme_default()\n#>    * Does _not_ affect other ggplot2 plots\n#>    * See ?bayesplot_theme_set for details on theme setting\nlibrary(dplyr)\n#> \n#> Attaching package: 'dplyr'\n#> The following objects are masked from 'package:stats':\n#> \n#>     filter, lag\n#> The following objects are masked from 'package:base':\n#> \n#>     intersect, setdiff, setequal, union\n```\n:::\n\n\n\nNow, we load the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(sum_fl)\n```\n:::\n\n\n\n## Data processing & splitting\n\nTo assess model predictions, the chunk below splits the data into train and\ntest.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 5 years-ahead predictions\nfirst_year_forecast <- max(sum_fl$year) - 5\n\nfirst_id_forecast <-\n  first_year_forecast - min(sum_fl$year) + 1\n\nyears_all <- length(unique(sum_fl$year))\nyears_train <- years_all[years_all < first_id_forecast]\nyears_test <- years_all[years_all >= first_id_forecast]\n\n## splitting data\ndat_test <- sum_fl |>\n  filter(year >= first_year_forecast)\n\ndat_train <- sum_fl |>\n  filter(year < first_year_forecast)\n```\n:::\n\n\n\nFinally, I transform our response variable into a density.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_train <- dat_train |>\n  mutate(dens = y / area_km2,\n         .before = y)\n\ndat_test <- dat_test |>\n  mutate(dens = y / area_km2,\n         .before = y)\n```\n:::\n\n\n\n## Preparing data for model fit\n\n\nThis package uses `cmdstanr` to fit DRMs to the data. The data passed to\n`cmdstanr` objects is stored in a `list` and we provide a function called\n`make_data`. \n\n\nThe `list` to fit the simplest model possible can be obtained as follows:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <-\n  make_data(y = dat_train$dens,\n            time = dat_train$year,\n            site = dat_train$patch,\n            n_ages = 8,\n            m = 0.25) # fishing mortality\n```\n:::\n\n\n\nIn general, the `make_data` function will control what model we are fitting\nthrough \"toggles\" and different inputs (type `?make_data` for\ndocumentation). For more information, see the toggles vignette\n(`vignettes(\"toggles\", package = \"drmr\")`).\n\n\n## Fitting model\n\nThe code below loads the object used to fit the DRM models. We don't need to\nreload this object if we update the data list using different options from the\n`make_data` function.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrm_compiled <-\n  instantiate::stan_package_model(name = \"drm\",\n                                  package = \"drmr\")\n```\n:::\n\n\n\nTo get MCMC samples from the posterior, run:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmcmc_samples <-\n  drm_compiled$sample(data = data,\n                      seed = 2025, ## for reproducibility\n                      chains = 4,\n                      parallel_chains = 4)\n#> Running MCMC with 4 parallel chains...\n#> \n#> Chain 1 Iteration:    1 / 2000 [  0%]  (Warmup) \n#> Chain 1 Iteration:  100 / 2000 [  5%]  (Warmup) \n#> Chain 1 Iteration:  200 / 2000 [ 10%]  (Warmup)\n#> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n#> Chain 1 Exception: lognormal_lpdf: Location parameter[1] is nan, but must be finite! (in '/var/folders/d6/j70khxxs5v325b9j6q93n46h0000gn/T/Rtmp2GIo0m/model-5e3319f73c6e.stan', line 482, column 4 to column 63)\n#> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n#> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n#> Chain 1\n#> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n#> Chain 1 Exception: lognormal_lpdf: Location parameter[1] is nan, but must be finite! (in '/var/folders/d6/j70khxxs5v325b9j6q93n46h0000gn/T/Rtmp2GIo0m/model-5e3319f73c6e.stan', line 482, column 4 to column 63)\n#> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n#> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n#> Chain 1\n#> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n#> Chain 1 Exception: lognormal_lpdf: Location parameter[1] is inf, but must be finite! (in '/var/folders/d6/j70khxxs5v325b9j6q93n46h0000gn/T/Rtmp2GIo0m/model-5e3319f73c6e.stan', line 482, column 4 to column 63)\n#> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n#> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n#> Chain 1\n#> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n#> Chain 1 Exception: lognormal_lpdf: Location parameter[1] is inf, but must be finite! (in '/var/folders/d6/j70khxxs5v325b9j6q93n46h0000gn/T/Rtmp2GIo0m/model-5e3319f73c6e.stan', line 482, column 4 to column 63)\n#> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n#> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n#> Chain 1\n#> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n#> Chain 1 Exception: lognormal_lpdf: Location parameter[1] is -inf, but must be finite! (in '/var/folders/d6/j70khxxs5v325b9j6q93n46h0000gn/T/Rtmp2GIo0m/model-5e3319f73c6e.stan', line 482, column 4 to column 63)\n#> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n#> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n#> Chain 1\n#> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n#> Chain 1 Exception: lognormal_lpdf: Scale parameter is 0, but must be positive finite! (in '/var/folders/d6/j70khxxs5v325b9j6q93n46h0000gn/T/Rtmp2GIo0m/model-5e3319f73c6e.stan', line 482, column 4 to column 63)\n#> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n#> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n#> Chain 1\n#> Chain 2 Iteration:    1 / 2000 [  0%]  (Warmup) \n#> Chain 2 Iteration:  100 / 2000 [  5%]  (Warmup) \n#> Chain 2 Iteration:  200 / 2000 [ 10%]  (Warmup)\n#> Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n#> Chain 2 Exception: lognormal_lpdf: Location parameter[1] is nan, but must be finite! (in '/var/folders/d6/j70khxxs5v325b9j6q93n46h0000gn/T/Rtmp2GIo0m/model-5e3319f73c6e.stan', line 482, column 4 to column 63)\n#> Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n#> Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n#> Chain 2\n#> Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n#> Chain 2 Exception: lognormal_lpdf: Location parameter[1] is nan, but must be finite! (in '/var/folders/d6/j70khxxs5v325b9j6q93n46h0000gn/T/Rtmp2GIo0m/model-5e3319f73c6e.stan', line 482, column 4 to column 63)\n#> Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n#> Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n#> Chain 2\n#> Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n#> Chain 2 Exception: lognormal_lpdf: Location parameter[1] is inf, but must be finite! (in '/var/folders/d6/j70khxxs5v325b9j6q93n46h0000gn/T/Rtmp2GIo0m/model-5e3319f73c6e.stan', line 482, column 4 to column 63)\n#> Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n#> Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n#> Chain 2\n#> Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n#> Chain 2 Exception: lognormal_lpdf: Location parameter[1] is inf, but must be finite! (in '/var/folders/d6/j70khxxs5v325b9j6q93n46h0000gn/T/Rtmp2GIo0m/model-5e3319f73c6e.stan', line 482, column 4 to column 63)\n#> Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n#> Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n#> Chain 2\n#> Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n#> Chain 2 Exception: lognormal_lpdf: Location parameter[1] is nan, but must be finite! (in '/var/folders/d6/j70khxxs5v325b9j6q93n46h0000gn/T/Rtmp2GIo0m/model-5e3319f73c6e.stan', line 482, column 4 to column 63)\n#> Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n#> Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n#> Chain 2\n#> Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n#> Chain 2 Exception: lognormal_lpdf: Location parameter[1] is nan, but must be finite! (in '/var/folders/d6/j70khxxs5v325b9j6q93n46h0000gn/T/Rtmp2GIo0m/model-5e3319f73c6e.stan', line 482, column 4 to column 63)\n#> Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n#> Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n#> Chain 2\n#> Chain 3 Iteration:    1 / 2000 [  0%]  (Warmup) \n#> Chain 3 Iteration:  100 / 2000 [  5%]  (Warmup)\n#> Chain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n#> Chain 3 Exception: lognormal_lpdf: Location parameter[1] is nan, but must be finite! (in '/var/folders/d6/j70khxxs5v325b9j6q93n46h0000gn/T/Rtmp2GIo0m/model-5e3319f73c6e.stan', line 482, column 4 to column 63)\n#> Chain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n#> Chain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n#> Chain 3\n#> Chain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n#> Chain 3 Exception: lognormal_lpdf: Location parameter[1] is nan, but must be finite! (in '/var/folders/d6/j70khxxs5v325b9j6q93n46h0000gn/T/Rtmp2GIo0m/model-5e3319f73c6e.stan', line 482, column 4 to column 63)\n#> Chain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n#> Chain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n#> Chain 3\n#> Chain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n#> Chain 3 Exception: lognormal_lpdf: Location parameter[1] is inf, but must be finite! (in '/var/folders/d6/j70khxxs5v325b9j6q93n46h0000gn/T/Rtmp2GIo0m/model-5e3319f73c6e.stan', line 482, column 4 to column 63)\n#> Chain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n#> Chain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n#> Chain 3\n#> Chain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n#> Chain 3 Exception: lognormal_lpdf: Location parameter[1] is inf, but must be finite! (in '/var/folders/d6/j70khxxs5v325b9j6q93n46h0000gn/T/Rtmp2GIo0m/model-5e3319f73c6e.stan', line 482, column 4 to column 63)\n#> Chain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n#> Chain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n#> Chain 3\n#> Chain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n#> Chain 3 Exception: lognormal_lpdf: Location parameter[1] is -inf, but must be finite! (in '/var/folders/d6/j70khxxs5v325b9j6q93n46h0000gn/T/Rtmp2GIo0m/model-5e3319f73c6e.stan', line 482, column 4 to column 63)\n#> Chain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n#> Chain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n#> Chain 3\n#> Chain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n#> Chain 3 Exception: lognormal_lpdf: Scale parameter is 0, but must be positive finite! (in '/var/folders/d6/j70khxxs5v325b9j6q93n46h0000gn/T/Rtmp2GIo0m/model-5e3319f73c6e.stan', line 482, column 4 to column 63)\n#> Chain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n#> Chain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n#> Chain 3\n#> Chain 4 Iteration:    1 / 2000 [  0%]  (Warmup) \n#> Chain 4 Iteration:  100 / 2000 [  5%]  (Warmup) \n#> Chain 4 Iteration:  200 / 2000 [ 10%]  (Warmup)\n#> Chain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n#> Chain 4 Exception: lognormal_lpdf: Location parameter[1] is nan, but must be finite! (in '/var/folders/d6/j70khxxs5v325b9j6q93n46h0000gn/T/Rtmp2GIo0m/model-5e3319f73c6e.stan', line 482, column 4 to column 63)\n#> Chain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n#> Chain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n#> Chain 4\n#> Chain 1 Iteration:  300 / 2000 [ 15%]  (Warmup) \n#> Chain 1 Iteration:  400 / 2000 [ 20%]  (Warmup) \n#> Chain 1 Iteration:  500 / 2000 [ 25%]  (Warmup) \n#> Chain 2 Iteration:  300 / 2000 [ 15%]  (Warmup) \n#> Chain 2 Iteration:  400 / 2000 [ 20%]  (Warmup) \n#> Chain 3 Iteration:  200 / 2000 [ 10%]  (Warmup) \n#> Chain 3 Iteration:  300 / 2000 [ 15%]  (Warmup) \n#> Chain 3 Iteration:  400 / 2000 [ 20%]  (Warmup) \n#> Chain 4 Iteration:  300 / 2000 [ 15%]  (Warmup) \n#> Chain 1 Iteration:  600 / 2000 [ 30%]  (Warmup) \n#> Chain 1 Iteration:  700 / 2000 [ 35%]  (Warmup) \n#> Chain 2 Iteration:  500 / 2000 [ 25%]  (Warmup) \n#> Chain 2 Iteration:  600 / 2000 [ 30%]  (Warmup) \n#> Chain 3 Iteration:  500 / 2000 [ 25%]  (Warmup) \n#> Chain 3 Iteration:  600 / 2000 [ 30%]  (Warmup) \n#> Chain 4 Iteration:  400 / 2000 [ 20%]  (Warmup) \n#> Chain 4 Iteration:  500 / 2000 [ 25%]  (Warmup) \n#> Chain 1 Iteration:  800 / 2000 [ 40%]  (Warmup) \n#> Chain 1 Iteration:  900 / 2000 [ 45%]  (Warmup) \n#> Chain 2 Iteration:  700 / 2000 [ 35%]  (Warmup) \n#> Chain 2 Iteration:  800 / 2000 [ 40%]  (Warmup) \n#> Chain 3 Iteration:  700 / 2000 [ 35%]  (Warmup) \n#> Chain 3 Iteration:  800 / 2000 [ 40%]  (Warmup) \n#> Chain 4 Iteration:  600 / 2000 [ 30%]  (Warmup) \n#> Chain 4 Iteration:  700 / 2000 [ 35%]  (Warmup) \n#> Chain 4 Iteration:  800 / 2000 [ 40%]  (Warmup) \n#> Chain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) \n#> Chain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) \n#> Chain 2 Iteration:  900 / 2000 [ 45%]  (Warmup) \n#> Chain 2 Iteration: 1000 / 2000 [ 50%]  (Warmup) \n#> Chain 2 Iteration: 1001 / 2000 [ 50%]  (Sampling) \n#> Chain 3 Iteration:  900 / 2000 [ 45%]  (Warmup) \n#> Chain 3 Iteration: 1000 / 2000 [ 50%]  (Warmup) \n#> Chain 3 Iteration: 1001 / 2000 [ 50%]  (Sampling) \n#> Chain 4 Iteration:  900 / 2000 [ 45%]  (Warmup) \n#> Chain 4 Iteration: 1000 / 2000 [ 50%]  (Warmup) \n#> Chain 4 Iteration: 1001 / 2000 [ 50%]  (Sampling) \n#> Chain 1 Iteration: 1100 / 2000 [ 55%]  (Sampling) \n#> Chain 2 Iteration: 1100 / 2000 [ 55%]  (Sampling) \n#> Chain 3 Iteration: 1100 / 2000 [ 55%]  (Sampling) \n#> Chain 4 Iteration: 1100 / 2000 [ 55%]  (Sampling) \n#> Chain 1 Iteration: 1200 / 2000 [ 60%]  (Sampling) \n#> Chain 2 Iteration: 1200 / 2000 [ 60%]  (Sampling) \n#> Chain 3 Iteration: 1200 / 2000 [ 60%]  (Sampling) \n#> Chain 1 Iteration: 1300 / 2000 [ 65%]  (Sampling) \n#> Chain 4 Iteration: 1200 / 2000 [ 60%]  (Sampling) \n#> Chain 1 Iteration: 1400 / 2000 [ 70%]  (Sampling) \n#> Chain 2 Iteration: 1300 / 2000 [ 65%]  (Sampling) \n#> Chain 3 Iteration: 1300 / 2000 [ 65%]  (Sampling) \n#> Chain 4 Iteration: 1300 / 2000 [ 65%]  (Sampling) \n#> Chain 1 Iteration: 1500 / 2000 [ 75%]  (Sampling) \n#> Chain 2 Iteration: 1400 / 2000 [ 70%]  (Sampling) \n#> Chain 3 Iteration: 1400 / 2000 [ 70%]  (Sampling) \n#> Chain 4 Iteration: 1400 / 2000 [ 70%]  (Sampling) \n#> Chain 1 Iteration: 1600 / 2000 [ 80%]  (Sampling) \n#> Chain 2 Iteration: 1500 / 2000 [ 75%]  (Sampling) \n#> Chain 3 Iteration: 1500 / 2000 [ 75%]  (Sampling) \n#> Chain 4 Iteration: 1500 / 2000 [ 75%]  (Sampling) \n#> Chain 1 Iteration: 1700 / 2000 [ 85%]  (Sampling) \n#> Chain 2 Iteration: 1600 / 2000 [ 80%]  (Sampling) \n#> Chain 3 Iteration: 1600 / 2000 [ 80%]  (Sampling) \n#> Chain 4 Iteration: 1600 / 2000 [ 80%]  (Sampling) \n#> Chain 1 Iteration: 1800 / 2000 [ 90%]  (Sampling) \n#> Chain 2 Iteration: 1700 / 2000 [ 85%]  (Sampling) \n#> Chain 3 Iteration: 1700 / 2000 [ 85%]  (Sampling) \n#> Chain 4 Iteration: 1700 / 2000 [ 85%]  (Sampling) \n#> Chain 1 Iteration: 1900 / 2000 [ 95%]  (Sampling) \n#> Chain 2 Iteration: 1800 / 2000 [ 90%]  (Sampling) \n#> Chain 3 Iteration: 1800 / 2000 [ 90%]  (Sampling) \n#> Chain 4 Iteration: 1800 / 2000 [ 90%]  (Sampling) \n#> Chain 1 Iteration: 2000 / 2000 [100%]  (Sampling) \n#> Chain 2 Iteration: 1900 / 2000 [ 95%]  (Sampling) \n#> Chain 3 Iteration: 1900 / 2000 [ 95%]  (Sampling) \n#> Chain 4 Iteration: 1900 / 2000 [ 95%]  (Sampling) \n#> Chain 1 finished in 1.7 seconds.\n#> Chain 3 Iteration: 2000 / 2000 [100%]  (Sampling) \n#> Chain 4 Iteration: 2000 / 2000 [100%]  (Sampling) \n#> Chain 3 finished in 1.7 seconds.\n#> Chain 4 finished in 1.7 seconds.\n#> Chain 2 Iteration: 2000 / 2000 [100%]  (Sampling) \n#> Chain 2 finished in 1.7 seconds.\n#> \n#> All 4 chains finished successfully.\n#> Mean chain execution time: 1.7 seconds.\n#> Total execution time: 1.9 seconds.\n```\n:::\n\n\n\nAlternatively, we can achieve the same result without loading the compiled model\nand creating a `data` list. This is achieved through the `fit_drm` function as\nfollows:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmcmc_samples <-\n  fit_drm(.data = dat_train,\n          y_col = \"dens\",\n          time_col = \"year\",\n          site_col = \"patch\"\n          n_ages = 8,\n          m = 0.25,\n          seed = 2025)\n```\n:::\n\n\n\n\n## Sampler convergence\n\nIn general, the chains mix well and the posterior densities estimates are\nsimilar for the four chains ran:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n##| fig-alt: \"MCMC diagnostic plots for the DRM, arranged in two columns and\n##|   three rows. The left column displays trace plots for four parallel MCMC\n##|   chains, assessing convergence. The right column displays the estimated\n##|   posterior density plots for each parameter, assessing mixing. Row 1:\n##|   sigma_obs parameter; Row 2: coef_t parameter; Row 3: coef_r parameter.\n##|   All parameters show evidence of good chain convergence and mixing.\"\n\nmcmc_samples$draws(variables = c(\"sigma_obs\",\n                                 \"coef_t\",\n                                 \"coef_r\")) |>\n  mcmc_combo(combo = c(\"trace\", \"dens_overlay\"),\n             facet_args = list(labeller = label_parsed))\n```\n\n::: {.cell-output-display}\n![](get-started_files/figure-html/traceplot-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "get-started_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}